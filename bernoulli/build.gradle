import com.android.build.gradle.LibraryPlugin
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

buildscript {

  repositories {
    google()
    mavenCentral()
  }

  dependencies {

    classpath "com.android.tools.build:gradle:3.5.1"

    classpath 'org.aspectj:aspectjtools:1.9.4'
  }
}

apply plugin: 'com.android.library'

repositories {
  google()
  mavenCentral()
}

dependencies {
  implementation 'org.aspectj:aspectjrt:1.9.4'
}

android {
  compileSdkVersion 30
  buildToolsVersion "30.0.2"

  defaultConfig {

    minSdkVersion 21
    targetSdkVersion 30
    versionCode 1
    versionName "0.1.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  lintOptions {
    abortOnError false
  }
}

android.libraryVariants.all { variant ->
  LibraryPlugin plugin = project.plugins.getPlugin(LibraryPlugin)
  JavaCompile javaCompile = variant.javaCompile
  javaCompile.doLast {
    String[] args = ["-showWeaveInfo",
                     "-1.5",
                     "-inpath", javaCompile.destinationDir.toString(),
                     "-aspectpath", javaCompile.classpath.asPath,
                     "-d", javaCompile.destinationDir.toString(),
                     "-classpath", javaCompile.classpath.asPath,
                     "-bootclasspath", plugin.project.android.bootClasspath.join(
        File.pathSeparator)]

    MessageHandler handler = new MessageHandler(true);
    new Main().run(args, handler)

    def log = project.logger
    for (IMessage message : handler.getMessages(null, true)) {
      switch (message.getKind()) {
        case IMessage.ABORT:
        case IMessage.ERROR:
        case IMessage.FAIL:
          log.error message.message, message.thrown
          break;
        case IMessage.WARNING:
        case IMessage.INFO:
          log.info message.message, message.thrown
          break;
        case IMessage.DEBUG:
          log.debug message.message, message.thrown
          break;
      }
    }
  }
}
